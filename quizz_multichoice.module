<?php

use Drupal\quizz_question\Entity\QuestionType;

/**
 * The main file for multichoice.
 *
 * Sponsored by: Norwegian Centre for Telemedicine
 * Code: falcon
 *
 * @file
 * Multiplechoice question type for the Quiz module.
 *
 */

/**
 * Implements hook_quiz_question_info().
 */
function quizz_multichoice_quiz_question_info() {
  return array(
      'multichoice' => array(
          'name'              => t('Multiple choice question'),
          'description'       => t('This provides multiple choice questions for use by the Quiz module.'),
          'question provider' => 'Drupal\quizz_multichoice\MultichoiceQuestion',
          'response provider' => 'Drupal\quizz_multichoice\MultichoiceResponse',
          'module'            => 'quizz_question', // All wrapper functions are in that module.
      ),
  );
}

/**
 * Implements hook_quiz_question_config().
 */
function quizz_multichoice_quiz_question_config(QuestionType $question_type) {
  $form = array('#validate' => array('quizz_multichoice_config_validate'));

  $form['multichoice_def_num_of_alts'] = array(
      '#type'          => 'textfield',
      '#title'         => t('Default number of alternatives'),
      '#default_value' => $question_type->getConfig('multichoice_def_num_of_alts', 2),
  );

  $form['multichoice_def_scoring'] = array(
      '#type'          => 'radios',
      '#title'         => t('Default scoring method'),
      '#description'   => t('Choose the default scoring method for questions with multiple correct answers.'),
      '#options'       => array(
          0 => t('Give minus one point for incorrect answers'),
          1 => t("Give one point for each incorrect option that haven't been chosen"),
      ),
      '#default_value' => $question_type->getConfig('multichoice_def_scoring', 0),
  );

  return $form;
}

/**
 * Validate the multichoice config form values
 */
function quizz_multichoice_config_validate($form, $form_state) {
  if (!quizz_valid_integer($form_state['values']['multichoice_def_num_of_alts'], 2, 50)) {
    form_set_error('multichoice_def_num_of_alts', t('The default number of alternatives must be between 2 and 50'));
  }
}

/**
 * Implements hook_theme().
 */
function quizz_multichoice_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('module', 'quizz_multichoice') . '/theme';
  return array(
      'multichoice_creation_form'              => array(
          'render element' => 'form',
          'path'           => $path,
          'file'           => 'quizz_multichoice.theme.inc',
      ),
      'multichoice_answer_node_view'           => array(
          'variables' => array(
              'alternatives' => NULL,
              'show_correct' => NULL,
          ),
          'path'      => $path,
          'file'      => 'quizz_multichoice.theme.inc',
      ),
      'multichoice_alternative_creation_table' => array(
          'render element' => 'form',
          'path'           => $path,
          'template'       => 'multichoice-alternative-creation-table',
      ),
      'multichoice_answering_form'             => array(
          'render element' => 'form',
          'path'           => $path,
          'template'       => 'multichoice-answering-form',
      ),
      'multichoice_alternative'                => array(
          'render element' => 'form',
          'path'           => $path,
          'template'       => 'multichoice-alternative',
      ),
  );
}

/**
 * ajax callback function used when adding alternatives to the node-form
 */
function quizz_multichoice_add_alternative_ajax_callback($form, &$form_state) {
  return $form['question_handler'][0]['alternatives'];
}

/**
 * Implements hook_user_cancel().
 */
function multichoice_user_cancel($edit, $account, $method) {
  db_delete('quiz_multichoice_user_settings')
    ->condition('uid', $account->uid)
    ->execute();
}

/**
 * Implements hook_views_api().
 */
function quizz_multichoice_views_api() {
  return array(
      'api'  => 3,
      'path' => drupal_get_path('module', 'quizz_multichoice'),
  );
}
